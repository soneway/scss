/*
transform动画函数ani_trans
以及,简单动画类ani-item
*/

//变量
$anitrans-duration: 0.8s !default;
$anitrans-delay: 0.3s !default;

//transform动画函数
@mixin ani_trans($tx: 0, $ty: 0, $tz: 0, $sx: 1, $sy: 1, $sz: 1, $rx: 0deg, $ry: 0deg, $rz: 0deg, $kx: 0deg, $ky: 0deg) {
    $transform: '';
    @if $tx != 0 or $ty != 0 or $tz != 0
    {
        $transform: #{$transform + translate3d($tx, $ty, $tz)};
    }
    @if $sx != 1 or $sy != 1 or $sz != 1
    {
        $transform: #{$transform + scale3d($sx, $sy, $sz)};
    }
    @if $rx != 0deg
    {
        $transform: #{$transform + rotateX($rx)};
    }
    @if $ry != 0deg
    {
        $transform: #{$transform + rotateY($ry)};
    }
    @if $rz != 0deg
    {
        $transform: #{$transform + rotateZ($rz)};
    }
    @if $kx != 0deg
    {
        $transform: #{$transform + skewX($kx)};
    }
    @if $ky != 0deg
    {
        $transform: #{$transform + skewY($ky)};
    }
    @include mx_transform($transform);
    //translate3d($tx, $ty, $tz) scale3d($sx, $sy, $sz) rotateX($rx) rotateY($ry) rotateZ($rz) skewX($kx) skewY($ky)
}


/*动画item*/
.at-item
{
    opacity: 0;
    @extend %ph_absolute;

    /*复位动画*/
    .current &
    {
        opacity: 1;
        transition: all $anitrans-duration ease $anitrans-delay;
        /*重置为默认值*/
        transform: none !important;

        /*相应倍率的延迟后做动画*/
        @for $i from 1 through 4
        {
            &.at-x#{$i}
            {
                transition-delay: $anitrans-duration * $i + $anitrans-delay;
            }
        }
    }
}


//动画延迟函数
@mixin ani_delay($len: 3, $span: 0.2s, $baseX: 0) {
    @for $i from 1 through $len
    {
        &.x#{$i}
        {
            transition-delay: $anitrans-duration * $baseX + $anitrans-delay + $span * ($i - 1);
        }
    }
}